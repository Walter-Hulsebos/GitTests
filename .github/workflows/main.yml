name: Unity Actions

on:
  pull_request: {}
  push: { branches: [stable, develop] }
  workflow_dispatch: {}

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 0
          #lfs: true
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-test-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: Library-test-

      - name: Run Unit Tests
        uses: game-ci/unity-test-runner@main
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          testMode: playmode
          githubToken: ${{ secrets.GITHUB_TOKEN }}

#      - name: Update Release Notes
#        if: github.event.action == 'published'
#        env:
#          RELEASE_NOTES: ${{ github.event.release.body }}
#        run: |
#          echo "$RELEASE_NOTES" > fastlane/metadata/android/en-US/changelogs/default.txt
#          echo "$RELEASE_NOTES" > fastlane/metadata/en-US/release_notes.txt
#
#      - name: Auto-Commit Release Notes
#        if: github.event.action == 'published'
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          branch: stable
#          file_pattern: fastlane/metadata
#          commit_message: Update Release Notes (MINOR)

#  buildForWindowsBasedPlatforms:
#    name: Build for ${{ matrix.targetPlatform }}
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        projectPath:
#          -
#        unityVersion:
#          - 2022.3.9f1
#        targetPlatform:
#          - StandaloneWindows64 # Build a Windows 64-bit standalone.
#
#    steps:
#      - uses: actions/checkout@v4.1.0
#        with:
#          fetch-depth: 0
#          lfs: true
#      - uses: actions/cache@v3.3.2
#        with:
#          path: ${{ matrix.projectPath }}/Library
#          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
#          restore-keys: |
#              Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
#              Library-${{ matrix.projectPath }}-
#              Library-
#      - uses: game-ci/unity-builder@v3.1.0
#        env:
#          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
#          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#        with:
#          projectPath: ${{ matrix.projectPath }}
#          unityVersion: ${{ matrix.unityVersion }}
#          targetPlatform: ${{ matrix.targetPlatform }}
#
#          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
#      - uses: actions/upload-artifact@v3.1.3
#        with:
#          name: Build
#          path: build